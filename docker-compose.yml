version: '0.1'
services:
# redis
  cache:
      container_name: cache
      image: redis:alpine
      restart: always
      ports:
        - '6379:6379'
      command: redis-server --save 20 1 --loglevel warning
      volumes: 
        - cache:/data
# sql test
  sql-server-test:
    container_name: sql-server-test
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
      - "1433:1433"
    volumes:
      - d:/site/docker/sql/test/data:/var/opt/mssql/data
      - d:/site/docker/sql/test/log:/var/opt/mssql/log
    environment:
      SA_PASSWORD: "123qwe!Q"
      ACCEPT_EULA: "Y"
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "123qwe!Q" -Q "SELECT 1" -b -o /dev/null
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
# api test
  api-test:
    container_name: api-test
   # image: api1:1
    image: andrewparys/api-test:develop
    ports:
      - "1669:80"
    volumes:
      - d:/site/docker/api/test/wwwroot:/app/wwwroot
      - d:/site/docker/api/test/config:/app/config
    environment:
      - ASPNETCORE_ENVIRONMENT=Release
      - ASPNETCORE_URLS=http://+:80;
    depends_on:
      sql-server-test:
        condition: service_healthy

   #client test
  client-test:
    container_name: client-test
   # image: api1:1
    image: andrewparys/client-test:develop
    ports:
       - "3000:80"
    depends_on:
       - api-test

# SSR test

# nginx test

volumes:
  cache:
    driver: local